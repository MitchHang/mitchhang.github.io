[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "sportsblog",
    "section": "",
    "text": "Purdue dethroned in average offensive plays for 2023 NCAA football season\n\n\n\n\n\n\n\n\n\n\n\n\nOct 10, 2023\n\n\nMitchell Hang\n\n\n\n\n\n\n  \n\n\n\n\nHello World!\n\n\n\n\n\n\n\n\n\n\n\n\nOct 5, 2023\n\n\nMitchell Hang\n\n\n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nOct 5, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nOct 2, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/big-ten-plays/index.html",
    "href": "posts/big-ten-plays/index.html",
    "title": "Purdue dethroned in average offensive plays for 2023 NCAA football season",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(scales)\n\n\nHere I am loading the library items that will help me construct my code for this exercise.\n\n\nCode\nlogs_22 &lt;- read_csv(\"https://dwillis.github.io/sports-data-files/footballlogs22.csv\")\n\nlogs_23 &lt;- read_csv(\"https://dwillis.github.io/sports-data-files/footballlogs23.csv\")\n\n\nHere I am loading the two online datasets for 2022 and 2023 separately into RStudio.\n\n\nCode\nbig10 &lt;- c(\"Nebraska Cornhuskers\", \"Iowa Hawkeyes\", \"Minnesota Golden Gophers\", \"Illinois Fighting Illini\", \"Northwestern Wildcats\", \"Wisconsin Badgers\", \"Indiana Hoosiers\", \"Purdue Boilermakers\", \"Ohio State Buckeyes\", \"Michigan Wolverines\", \"Michigan State Spartans\", \"Penn State Nittany Lions\", \"Rutgers Scarlet Knights\", \"Maryland Terrapins\")\n\n\nThis code block constructs a filter category of all the Big Ten colleges to be used in the 2022 and 2023 datasets. Alternatively, one could filter the datasets directly by conference.\n\n\nCode\nlogs_22_filtered &lt;- logs_22 |&gt; \n  filter(TeamFull %in% big10) |&gt;\n  select(TeamFull, OffensivePlays) |&gt;\n  group_by(TeamFull) |&gt;\n  summarise(\n    TotalOffensivePlays = sum(OffensivePlays),\n    GamesPlayed = n(),\n    AvgOffensivePlaysPerGame = (TotalOffensivePlays/GamesPlayed)) |&gt;\n  arrange(desc(AvgOffensivePlaysPerGame))\n\nshow(logs_22_filtered)\n\n\n# A tibble: 14 × 4\n   TeamFull               TotalOffensivePlays GamesPlayed AvgOffensivePlaysPer…¹\n   &lt;chr&gt;                                &lt;dbl&gt;       &lt;int&gt;                  &lt;dbl&gt;\n 1 Purdue Boilermakers                   1049          14                   74.9\n 2 Northwestern Wildcats                  886          12                   73.8\n 3 Indiana Hoosiers                       879          12                   73.2\n 4 Illinois Fighting Ill…                 938          13                   72.2\n 5 Maryland Terrapins                     915          13                   70.4\n 6 Penn State Nittany Li…                 911          13                   70.1\n 7 Michigan Wolverines                    970          14                   69.3\n 8 Ohio State Buckeyes                    876          13                   67.4\n 9 Minnesota Golden Goph…                 862          13                   66.3\n10 Michigan State Sparta…                 773          12                   64.4\n11 Wisconsin Badgers                      827          13                   63.6\n12 Rutgers Scarlet Knigh…                 762          12                   63.5\n13 Nebraska Cornhuskers                   761          12                   63.4\n14 Iowa Hawkeyes                          772          13                   59.4\n# ℹ abbreviated name: ¹​AvgOffensivePlaysPerGame\n\n\nHere, I am mutating the 2022 dataset to show the results I would like. I begin by implementing the Big Ten filter category, selecting only the columns showing the full team name and the number of offensive plays for each game, and grouping by the full team name. Then, I use the summarise/ze function to create new columns showing the total number of offensive plays for each team, the number of games each team played during the season, and the calculated average number of offensive plays per game for each team. I then arranged the teams in descending order by the latter column, and we can see that the Purdue Boilermakers have a wide lead for their total offensive plays, thereby resulting them having the highest average offensive plays per game during the 2022 season, as there is about one play separating the Boilermakers and the Northwestern Wildcats and half a play separating the Wildcats and the Indiana Hoosiers. I would say that these team results are relatively close to one another.\n\n\nCode\nggplot() + \n  geom_bar(\n    data=logs_22_filtered, \n    aes(x=reorder(TeamFull, AvgOffensivePlaysPerGame),\n        weight=AvgOffensivePlaysPerGame)) + \n  scale_y_continuous(labels=comma) + \n  labs(\n    title=\"Purdue out on top in average offensive plays for 2022\", \n    x=\"Team\", \n    y=\"Average # of offensive plays per game\") + \n  theme_minimal() + \n  coord_flip()\n\n\n\n\n\nHere, I am constructing a stacked bar graph that shows the average number of offensive plays for each team in the Big Ten Conference for the 2022 college football season. I decided to go with a stacked bar graph because the names of the teams are quite long and they would cross into one another otherwise, and also because it will be easier to see any differences from one team to another rather than a regular (i.e., vertical) bar graph.\nThis graph, we can see that Purdue has the highest average number of offensive plays for all Big Ten colleges during the 2022 college football season. There are relatively small margins from one team to another on this graph, with the largest separation being between the Nebraska Cornhuskers and the Iowa Hawkeyes. Some teams have played for fewer games compared to Purdue (they have played the most, at 14 games) during the 2022 season, and it’s possible that the ranking would’ve changed had they played more games.\n\n\nCode\nlogs_23_filtered &lt;- logs_23 |&gt; \n  filter(TeamFull %in% big10) |&gt;\n  select(TeamFull, OffensivePlays) |&gt;\n  group_by(TeamFull) |&gt;\n  summarise(\n    TotalOffensivePlays = sum(OffensivePlays),\n    GamesPlayed = n(),\n    AvgOffensivePlaysPerGame = (TotalOffensivePlays/GamesPlayed)) |&gt;\n  arrange(desc(AvgOffensivePlaysPerGame))\n\nshow(logs_23_filtered)\n\n\n# A tibble: 14 × 4\n   TeamFull               TotalOffensivePlays GamesPlayed AvgOffensivePlaysPer…¹\n   &lt;chr&gt;                                &lt;dbl&gt;       &lt;int&gt;                  &lt;dbl&gt;\n 1 Penn State Nittany Li…                 403           5                   80.6\n 2 Purdue Boilermakers                    438           6                   73  \n 3 Wisconsin Badgers                      357           5                   71.4\n 4 Maryland Terrapins                     410           6                   68.3\n 5 Michigan State Sparta…                 338           5                   67.6\n 6 Illinois Fighting Ill…                 400           6                   66.7\n 7 Northwestern Wildcats                  399           6                   66.5\n 8 Indiana Hoosiers                       332           5                   66.4\n 9 Minnesota Golden Goph…                 382           6                   63.7\n10 Ohio State Buckeyes                    314           5                   62.8\n11 Rutgers Scarlet Knigh…                 373           6                   62.2\n12 Nebraska Cornhuskers                   372           6                   62  \n13 Michigan Wolverines                    358           6                   59.7\n14 Iowa Hawkeyes                          333           6                   55.5\n# ℹ abbreviated name: ¹​AvgOffensivePlaysPerGame\n\n\nHere, I am doing the exact same steps I used to mutate the 2022 dataset for the current 2023 dataset. Here, we can see that the Penn State Nittany Lions have overtaken the Purdue Boilermakers in average offensive plays per game in the 2023 season by about six plays. The Wisconsin Badgers have moved up considerably from last year’s ranking, as they are currently now behind Purdue by no more than two plays.\n\n\nCode\nggplot() + \n  geom_bar(\n    data=logs_23_filtered, \n    aes(x=reorder(TeamFull, AvgOffensivePlaysPerGame),\n        weight=AvgOffensivePlaysPerGame)) + \n  scale_y_continuous(labels=comma) + \n  labs(\n    title=\"Penn State overtakes Purdue in average offensive plays for 2023\", \n    x=\"Team\", \n    y=\"Average # of offensive plays per game\") + \n  theme_minimal() + \n  coord_flip()\n\n\n\n\n\nHere, we see that the Penn Stake Nittany Lions have currently dethroned the Purdue Boilermakers for having the highest average offensive plays for all Big Ten colleges in the 2023 college football season, and it’s evident from the graph that there’s a much wider margin between the top two teams compared to the top 2 and top 3 teams, top 3 and top 4 teams, etc. It can be assumed that Penn State was pushing more offensive plays in their games since being ranked sixth in average offensive plays from last year. Interestingly, if we go back to the tibble from earlier, Penn State has played five games whereas Purdue has played six, and Purdue has a few dozen more offensive plays than Penn State. It’s possible that the separation between the current top two teams in average offensive plays wil grow larger once Penn State completes their sixth game.\nIn conclusion, I thought this was an interesting exercise in creating bar graphs to tell a story about a certain college’s rise or fall in the sports world. I was honestly surprised to see Purdue lose their lead in average offensive plays for another team, considering how dominant they were in having the highest offensive plays during the 2022 college football season. Considering that the 2023 college football season is still in progress, it’s unknown if the ranking will remain as is or if Purdue (or another team) takes back their lead, and maybe another team will make a surprising move up or down from last year’s ranking."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/hello-world/index.html",
    "href": "posts/hello-world/index.html",
    "title": "Hello World!",
    "section": "",
    "text": "This is a blog. The word “blog” rhymes with “dog.”\nWelcome to my blog, dog."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  }
]