[
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/big-ten-plays/index.html",
    "href": "posts/big-ten-plays/index.html",
    "title": "Purdue dethroned in average offensive plays for 2023 NCAA football season",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(scales)\n\n\nHere I am loading the library items that will help me construct my code for this exercise.\n\n\nCode\nlogs_22 &lt;- read_csv(\"https://dwillis.github.io/sports-data-files/footballlogs22.csv\")\n\nlogs_23 &lt;- read_csv(\"https://dwillis.github.io/sports-data-files/footballlogs23.csv\")\n\n\nHere I am loading the two online datasets for 2022 and 2023 separately into RStudio.\n\n\nCode\nbig10 &lt;- c(\"Nebraska Cornhuskers\", \"Iowa Hawkeyes\", \"Minnesota Golden Gophers\", \"Illinois Fighting Illini\", \"Northwestern Wildcats\", \"Wisconsin Badgers\", \"Indiana Hoosiers\", \"Purdue Boilermakers\", \"Ohio State Buckeyes\", \"Michigan Wolverines\", \"Michigan State Spartans\", \"Penn State Nittany Lions\", \"Rutgers Scarlet Knights\", \"Maryland Terrapins\")\n\n\nThis code block constructs a filter category of all the Big Ten colleges to be used in the 2022 and 2023 datasets. Alternatively, one could filter the datasets directly by conference.\n\n\nCode\nlogs_22_filtered &lt;- logs_22 |&gt; \n  filter(TeamFull %in% big10) |&gt;\n  select(TeamFull, OffensivePlays) |&gt;\n  group_by(TeamFull) |&gt;\n  summarise(\n    TotalOffensivePlays = sum(OffensivePlays),\n    GamesPlayed = n(),\n    AvgOffensivePlaysPerGame = (TotalOffensivePlays/GamesPlayed)) |&gt;\n  arrange(desc(AvgOffensivePlaysPerGame))\n\nshow(logs_22_filtered)\n\n\n# A tibble: 14 × 4\n   TeamFull               TotalOffensivePlays GamesPlayed AvgOffensivePlaysPer…¹\n   &lt;chr&gt;                                &lt;dbl&gt;       &lt;int&gt;                  &lt;dbl&gt;\n 1 Purdue Boilermakers                   1049          14                   74.9\n 2 Northwestern Wildcats                  886          12                   73.8\n 3 Indiana Hoosiers                       879          12                   73.2\n 4 Illinois Fighting Ill…                 938          13                   72.2\n 5 Maryland Terrapins                     915          13                   70.4\n 6 Penn State Nittany Li…                 911          13                   70.1\n 7 Michigan Wolverines                    970          14                   69.3\n 8 Ohio State Buckeyes                    876          13                   67.4\n 9 Minnesota Golden Goph…                 862          13                   66.3\n10 Michigan State Sparta…                 773          12                   64.4\n11 Wisconsin Badgers                      827          13                   63.6\n12 Rutgers Scarlet Knigh…                 762          12                   63.5\n13 Nebraska Cornhuskers                   761          12                   63.4\n14 Iowa Hawkeyes                          772          13                   59.4\n# ℹ abbreviated name: ¹​AvgOffensivePlaysPerGame\n\n\nHere, I am mutating the 2022 dataset to show the results I would like. I begin by implementing the Big Ten filter category, selecting only the columns showing the full team name and the number of offensive plays for each game, and grouping by the full team name. Then, I use the summarise/ze function to create new columns showing the total number of offensive plays for each team, the number of games each team played during the season, and the calculated average number of offensive plays per game for each team. I then arranged the teams in descending order by the latter column, and we can see that the Purdue Boilermakers have a wide lead for their total offensive plays, thereby resulting them having the highest average offensive plays per game during the 2022 season, as there is about one play separating the Boilermakers and the Northwestern Wildcats and half a play separating the Wildcats and the Indiana Hoosiers. I would say that these team results are relatively close to one another.\n\n\nCode\nggplot() + \n  geom_bar(\n    data=logs_22_filtered, \n    aes(x=reorder(TeamFull, AvgOffensivePlaysPerGame),\n        weight=AvgOffensivePlaysPerGame)) + \n  scale_y_continuous(labels=comma) + \n  labs(\n    title=\"Purdue out on top in average offensive plays for 2022\", \n    x=\"Team\", \n    y=\"Average # of offensive plays per game\") + \n  theme_minimal() + \n  coord_flip()\n\n\n\n\n\nHere, I am constructing a stacked bar graph that shows the average number of offensive plays for each team in the Big Ten Conference for the 2022 college football season. I decided to go with a stacked bar graph because the names of the teams are quite long and they would cross into one another otherwise, and also because it will be easier to see any differences from one team to another rather than a regular (i.e., vertical) bar graph.\nThis graph, we can see that Purdue has the highest average number of offensive plays for all Big Ten colleges during the 2022 college football season. There are relatively small margins from one team to another on this graph, with the largest separation being between the Nebraska Cornhuskers and the Iowa Hawkeyes. Some teams have played for fewer games compared to Purdue (they have played the most, at 14 games) during the 2022 season, and it’s possible that the ranking would’ve changed had they played more games.\n\n\nCode\nlogs_23_filtered &lt;- logs_23 |&gt; \n  filter(TeamFull %in% big10) |&gt;\n  select(TeamFull, OffensivePlays) |&gt;\n  group_by(TeamFull) |&gt;\n  summarise(\n    TotalOffensivePlays = sum(OffensivePlays),\n    GamesPlayed = n(),\n    AvgOffensivePlaysPerGame = (TotalOffensivePlays/GamesPlayed)) |&gt;\n  arrange(desc(AvgOffensivePlaysPerGame))\n\nshow(logs_23_filtered)\n\n\n# A tibble: 14 × 4\n   TeamFull               TotalOffensivePlays GamesPlayed AvgOffensivePlaysPer…¹\n   &lt;chr&gt;                                &lt;dbl&gt;       &lt;int&gt;                  &lt;dbl&gt;\n 1 Penn State Nittany Li…                 403           5                   80.6\n 2 Purdue Boilermakers                    438           6                   73  \n 3 Wisconsin Badgers                      357           5                   71.4\n 4 Maryland Terrapins                     410           6                   68.3\n 5 Michigan State Sparta…                 338           5                   67.6\n 6 Illinois Fighting Ill…                 400           6                   66.7\n 7 Northwestern Wildcats                  399           6                   66.5\n 8 Indiana Hoosiers                       332           5                   66.4\n 9 Minnesota Golden Goph…                 382           6                   63.7\n10 Ohio State Buckeyes                    314           5                   62.8\n11 Rutgers Scarlet Knigh…                 373           6                   62.2\n12 Nebraska Cornhuskers                   372           6                   62  \n13 Michigan Wolverines                    358           6                   59.7\n14 Iowa Hawkeyes                          333           6                   55.5\n# ℹ abbreviated name: ¹​AvgOffensivePlaysPerGame\n\n\nHere, I am doing the exact same steps I used to mutate the 2022 dataset for the current 2023 dataset. Here, we can see that the Penn State Nittany Lions have overtaken the Purdue Boilermakers in average offensive plays per game in the 2023 season by about six plays. The Wisconsin Badgers have moved up considerably from last year’s ranking, as they are currently now behind Purdue by no more than two plays.\n\n\nCode\nggplot() + \n  geom_bar(\n    data=logs_23_filtered, \n    aes(x=reorder(TeamFull, AvgOffensivePlaysPerGame),\n        weight=AvgOffensivePlaysPerGame)) + \n  scale_y_continuous(labels=comma) + \n  labs(\n    title=\"Penn State overtakes Purdue in average offensive plays for 2023\", \n    x=\"Team\", \n    y=\"Average # of offensive plays per game\") + \n  theme_minimal() + \n  coord_flip()\n\n\n\n\n\nHere, we see that the Penn Stake Nittany Lions have currently dethroned the Purdue Boilermakers for having the highest average offensive plays for all Big Ten colleges in the 2023 college football season, and it’s evident from the graph that there’s a much wider margin between the top two teams compared to the top 2 and top 3 teams, top 3 and top 4 teams, etc. It can be assumed that Penn State was pushing more offensive plays in their games since being ranked sixth in average offensive plays from last year. Interestingly, if we go back to the tibble from earlier, Penn State has played five games whereas Purdue has played six, and Purdue has a few dozen more offensive plays than Penn State. It’s possible that the separation between the current top two teams in average offensive plays wil grow larger once Penn State completes their sixth game.\nIn conclusion, I thought this was an interesting exercise in creating bar graphs to tell a story about a certain college’s rise or fall in the sports world. I was honestly surprised to see Purdue lose their lead in average offensive plays for another team, considering how dominant they were in having the highest offensive plays during the 2022 college football season. Considering that the 2023 college football season is still in progress, it’s unknown if the ranking will remain as is or if Purdue (or another team) takes back their lead, and maybe another team will make a surprising move up or down from last year’s ranking."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "sportsblog",
    "section": "",
    "text": "Third and Six\n\n\n\n\n\n\n\n\n\n\n\n\nOct 17, 2023\n\n\nMitchell Hang\n\n\n\n\n\n\n  \n\n\n\n\nPurdue dethroned in average offensive plays for 2023 NCAA football season\n\n\n\n\n\n\n\n\n\n\n\n\nOct 10, 2023\n\n\nMitchell Hang\n\n\n\n\n\n\n  \n\n\n\n\nHello World!\n\n\n\n\n\n\n\n\n\n\n\n\nOct 5, 2023\n\n\nMitchell Hang\n\n\n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nOct 5, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nOct 2, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/hello-world/index.html",
    "href": "posts/hello-world/index.html",
    "title": "Hello World!",
    "section": "",
    "text": "This is a blog. The word “blog” rhymes with “dog.”\nWelcome to my blog, dog."
  },
  {
    "objectID": "posts/third-and-six/index.html",
    "href": "posts/third-and-six/index.html",
    "title": "Third and Six",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(cfbfastR)\nlibrary(scales)\n\n\n\nload the play-by-play data\n\n\nCode\nplays &lt;- load_cfb_pbp(seasons = c(2019, 2020, 2021, 2022, 2023))\n\n\n\n\nCode\nthird_and_six &lt;- plays |&gt; filter(down == 3, distance == 6)\n\n\n\n\nCode\nthird_and_six_grouped &lt;- third_and_six |&gt;\n  group_by(play_type) |&gt;\n  summarize(count = n()) |&gt;\n  arrange(desc(count))\n\nthird_and_six_grouped\n\n\n# A tibble: 19 × 2\n   play_type                            count\n   &lt;chr&gt;                                &lt;int&gt;\n 1 Pass Reception                        3596\n 2 Pass Incompletion                     2956\n 3 Rush                                  2420\n 4 Penalty                                828\n 5 Timeout                                694\n 6 Sack                                   631\n 7 Passing Touchdown                      392\n 8 Interception Return                    188\n 9 Rushing Touchdown                      102\n10 Fumble Recovery (Opponent)              85\n11 Fumble Recovery (Own)                   56\n12 Interception Return Touchdown           26\n13 Field Goal Good                         13\n14 Field Goal Missed                        4\n15 Fumble Return Touchdown                  3\n16 Punt                                     3\n17 Safety                                   2\n18 Blocked Field Goal                       1\n19 Fumble Recovery (Opponent) Touchdown     1\n\n\nThe most frequent play type is a Pass Reception, with over 3,400 occurrences from 2019 to 2023.\n\n\nCode\nthird_and_six_grouped |&gt;\n  mutate(pct = (count/11655)*100)\n\n\n# A tibble: 19 × 3\n   play_type                            count      pct\n   &lt;chr&gt;                                &lt;int&gt;    &lt;dbl&gt;\n 1 Pass Reception                        3596 30.9    \n 2 Pass Incompletion                     2956 25.4    \n 3 Rush                                  2420 20.8    \n 4 Penalty                                828  7.10   \n 5 Timeout                                694  5.95   \n 6 Sack                                   631  5.41   \n 7 Passing Touchdown                      392  3.36   \n 8 Interception Return                    188  1.61   \n 9 Rushing Touchdown                      102  0.875  \n10 Fumble Recovery (Opponent)              85  0.729  \n11 Fumble Recovery (Own)                   56  0.480  \n12 Interception Return Touchdown           26  0.223  \n13 Field Goal Good                         13  0.112  \n14 Field Goal Missed                        4  0.0343 \n15 Fumble Return Touchdown                  3  0.0257 \n16 Punt                                     3  0.0257 \n17 Safety                                   2  0.0172 \n18 Blocked Field Goal                       1  0.00858\n19 Fumble Recovery (Opponent) Touchdown     1  0.00858\n\n\nWhen I added all occurrences for each type of play, I got 11,655. There were 2,359 rush/run plays from 2019 to 2023, and they accounted for about 20.24% of all types of plays during that same period.\n\n\nCode\nthird_and_six_yards_gained &lt;- third_and_six |&gt;\n  select(play_type, yards_gained) |&gt;\n  group_by(play_type) |&gt;\n  summarize(yards_gained = sum(yards_gained))\n\nthird_and_six_yards_gained\n\n\n# A tibble: 19 × 2\n   play_type                            yards_gained\n   &lt;chr&gt;                                       &lt;dbl&gt;\n 1 Blocked Field Goal                             48\n 2 Field Goal Good                               436\n 3 Field Goal Missed                             202\n 4 Fumble Recovery (Opponent)                    307\n 5 Fumble Recovery (Opponent) Touchdown            0\n 6 Fumble Recovery (Own)                          70\n 7 Fumble Return Touchdown                       141\n 8 Interception Return                           188\n 9 Interception Return Touchdown                 403\n10 Pass Incompletion                             240\n11 Pass Reception                              40481\n12 Passing Touchdown                            8101\n13 Penalty                                       146\n14 Punt                                            0\n15 Rush                                        13713\n16 Rushing Touchdown                            1700\n17 Sack                                        -3965\n18 Safety                                         -5\n19 Timeout                                         0\n\n\nThe total yards gained for rush/run plays from 2019 to 2023 is 13,286 yards, and since there were 2,359 rush/run plays, we get an average of about 5.632 yards gained per play.\n\n\nCode\nthird_and_six_teams_2019 &lt;- third_and_six |&gt;\n  filter(play_type == \"Rush\", year == 2019) |&gt; \n  group_by(home) |&gt;\n  summarize(rush_play_count = n()) |&gt;\n  arrange(desc(rush_play_count))\n\nthird_and_six_teams_2019\n\n\n# A tibble: 125 × 2\n   home             rush_play_count\n   &lt;chr&gt;                      &lt;int&gt;\n 1 Navy                          13\n 2 Georgia Southern              11\n 3 Notre Dame                    10\n 4 Oklahoma State                 8\n 5 Old Dominion                   8\n 6 Pittsburgh                     8\n 7 Florida State                  7\n 8 Nebraska                       7\n 9 Oregon                         7\n10 Toledo                         7\n# ℹ 115 more rows\n\n\n\n\nCode\nthird_and_six_teams_2020 &lt;- third_and_six |&gt;\n  filter(play_type == \"Rush\", year == 2020) |&gt; \n  group_by(home) |&gt;\n  summarize(rush_play_count = n()) |&gt;\n  arrange(desc(rush_play_count))\n\nthird_and_six_teams_2020\n\n\n# A tibble: 103 × 2\n   home             rush_play_count\n   &lt;chr&gt;                      &lt;int&gt;\n 1 NC State                       8\n 2 Navy                           8\n 3 North Texas                    8\n 4 Army                           7\n 5 Tulane                         7\n 6 Air Force                      5\n 7 Auburn                         5\n 8 Georgia Southern               5\n 9 Kansas State                   5\n10 Pittsburgh                     5\n# ℹ 93 more rows\n\n\n\n\nCode\nthird_and_six_teams_2021 &lt;- third_and_six |&gt;\n  filter(play_type == \"Rush\", year == 2021) |&gt; \n  group_by(home) |&gt;\n  summarize(rush_play_count = n()) |&gt;\n  arrange(desc(rush_play_count))\n\nthird_and_six_teams_2021\n\n\n# A tibble: 124 × 2\n   home              rush_play_count\n   &lt;chr&gt;                       &lt;int&gt;\n 1 Arkansas                       13\n 2 Air Force                      11\n 3 Army                            9\n 4 Baylor                          9\n 5 Ole Miss                        9\n 6 Wyoming                         9\n 7 Navy                            8\n 8 Northern Illinois               8\n 9 Tulane                          8\n10 Coastal Carolina                7\n# ℹ 114 more rows\n\n\n\n\nCode\nthird_and_six_teams_2022 &lt;- third_and_six |&gt;\n  filter(play_type == \"Rush\", year == 2022) |&gt; \n  group_by(home) |&gt;\n  summarize(rush_play_count = n()) |&gt;\n  arrange(desc(rush_play_count))\n\nthird_and_six_teams_2022\n\n\n# A tibble: 232 × 2\n   home               rush_play_count\n   &lt;chr&gt;                        &lt;int&gt;\n 1 Florida                          8\n 2 Georgia                          8\n 3 Mercer                           8\n 4 South Dakota State               8\n 5 Alabama State                    7\n 6 Duke                             7\n 7 Navy                             7\n 8 North Carolina                   7\n 9 Towson                           7\n10 Air Force                        6\n# ℹ 222 more rows\n\n\n\n\nCode\nthird_and_six_teams_2023 &lt;- third_and_six |&gt;\n  filter(play_type == \"Rush\", year == 2023) |&gt; \n  group_by(home) |&gt;\n  summarize(rush_play_count = n()) |&gt;\n  arrange(desc(rush_play_count))\n\nthird_and_six_teams_2023\n\n\n# A tibble: 190 × 2\n   home             rush_play_count\n   &lt;chr&gt;                      &lt;int&gt;\n 1 Army                           6\n 2 Louisiana                      6\n 3 Arkansas State                 5\n 4 Connecticut                    5\n 5 Georgia State                  5\n 6 Mercer                         5\n 7 Prairie View                   5\n 8 Tennessee Tech                 5\n 9 Virginia Tech                  5\n10 Western Michigan               5\n# ℹ 180 more rows\n\n\n\n\nCode\nthird_and_six_teams_total &lt;- third_and_six |&gt;\n  filter(play_type == \"Rush\") |&gt; \n  group_by(home) |&gt;\n  summarize(rush_play_count = n()) |&gt;\n  arrange(desc(rush_play_count))\n\nthird_and_six_teams_total\n\n\n# A tibble: 252 × 2\n   home             rush_play_count\n   &lt;chr&gt;                      &lt;int&gt;\n 1 Navy                          40\n 2 Army                          30\n 3 Tulane                        29\n 4 Air Force                     28\n 5 Baylor                        25\n 6 Georgia Southern              23\n 7 Michigan                      23\n 8 Ole Miss                      23\n 9 Bowling Green                 22\n10 Pittsburgh                    22\n# ℹ 242 more rows\n\n\nThe Navy had the most rush/run plays in 2019. There was a three-way tie in 2020 for NC State, the Navy and North Texas. Arkansas had the most rush/run plays in 2021. There was a four-way tie in 2022 for Florida, Georgia, Mercer, and South Dakota State. The Army had the most rush/run plays in 2023. From 2019 to 2023, the Navy had the most rush/run plays out of every team.\n\n\nMaryland\n\n\nCode\nthird_and_six_md_grouped &lt;- third_and_six |&gt;\n  filter(home == \"Maryland\") |&gt; \n  group_by(play_type) |&gt;\n  summarize(count = n()) |&gt;\n  arrange(desc(count))\n\nthird_and_six_md_grouped\n\n\n# A tibble: 10 × 2\n   play_type                  count\n   &lt;chr&gt;                      &lt;int&gt;\n 1 Pass Reception                25\n 2 Rush                          16\n 3 Pass Incompletion             14\n 4 Penalty                        6\n 5 Sack                           4\n 6 Timeout                        3\n 7 Fumble Recovery (Opponent)     1\n 8 Interception Return            1\n 9 Passing Touchdown              1\n10 Rushing Touchdown              1\n\n\n\n\nCode\nthird_and_six_md_grouped |&gt;\n  mutate(pct = (count/72)*100)\n\n\n# A tibble: 10 × 3\n   play_type                  count   pct\n   &lt;chr&gt;                      &lt;int&gt; &lt;dbl&gt;\n 1 Pass Reception                25 34.7 \n 2 Rush                          16 22.2 \n 3 Pass Incompletion             14 19.4 \n 4 Penalty                        6  8.33\n 5 Sack                           4  5.56\n 6 Timeout                        3  4.17\n 7 Fumble Recovery (Opponent)     1  1.39\n 8 Interception Return            1  1.39\n 9 Passing Touchdown              1  1.39\n10 Rushing Touchdown              1  1.39\n\n\nMaryland had ten types of plays from 2019 to 2023, with the most frequent of them being Pass Receptions, accounting for about 34.722% of all plays. This was surprising to me, as this is one of three play types that Maryland seems to be focusing on during football, whereas the other seven listed have less than 10 occurrences from 2019 to 2023. This makes me think that because Maryland focuses on the pass receptions, rushes/runs and pass incompletions, they would often do well in games, but because they aren’t focusing on anything else, they would come up less than stellar in games. So it’s honestly a bit of a mixed bag here.\n\n\nCode\nggplot() + \n  geom_bar(\n    data=third_and_six_md_grouped, \n    aes(x=reorder(play_type, count),\n        weight=count)) + \n  scale_y_continuous(labels=comma) + \n  labs(\n    title=\"Maryland's dominant play from 2019 to 2023 is pass receptions\", \n    x=\"Type of play\", \n    y=\"Count (from 2019 to 2023\") + \n  theme_minimal() + \n  coord_flip()"
  }
]